package org.openlca.simapro.csv;

import org.junit.Test;
import org.openlca.simapro.csv.enums.ProcessCategory;
import org.openlca.simapro.csv.enums.ProcessType;

import static org.junit.Assert.*;

public class ProcessBlockTest {
  @Test
  public void testProcessBlock() {
    var ds = Tests.testFile("process.csv");
    assertEquals(1, ds.processes().size());
    var process = ds.processes().get(0);
    assertEquals("Test process", process.name());
    assertEquals(ProcessCategory.MATERIAL, process.category());
    assertEquals("DefaultX25250700002", process.identifier());
    assertEquals(ProcessType.UNIT_PROCESS, process.processType());
    assertEquals("Draft", process.status());
    assertEquals("2005-2009", process.time());
    assertEquals("Mixed data", process.geography());
    assertEquals("Worst case", process.technology());
    assertEquals("Theoretical calculation", process.representativeness());
    assertEquals("Physical causality", process.allocation());
    assertEquals("Actual substitution", process.substitution());
    assertEquals("Less than 1% (physical criteria)", process.cutoff());
    assertEquals("First order (only primary flows)", process.capitalGoods());
    assertEquals("Agricultural production is part of production system", process.boundaryWithNature());
    assertEquals(false, process.infrastructure());
    assertEquals("data entry by: [System]", process.record());
    assertEquals("generated by: [System]", process.generator());
    assertEquals("text for collection method", process.collectionMethod());
    assertEquals("text for data treatment", process.dataTreatment());
    assertEquals("text for verification", process.verification());
    assertEquals("text for comment", process.comment());
    assertEquals("text for allocation rules", process.allocationRules());
    assertEquals("text for allocation rules", process.allocationRules());
  }

  @Test
  public void testLiteratureRow() {
    var ds = Tests.testFile("process.csv");
    assertEquals(1, ds.processes().size());
    var process = ds.processes().get(0);
    assertEquals(1, process.literatures().size());
    var literature = process.literatures().get(0);
    assertEquals("Ecoinvent 3", literature.name());
    assertEquals("is copyright protected: false", literature.comment());
  }
}
